AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Cloudfront hosted S3 Bucket for static content with custom domain and TLS

Parameters:
  BucketName:
    Type: String
    Description: Name of the bucket

  DeploymentName:
    Type: String
    Description: Name of the Cloudfront Deployment Target Origin

  DomainName:
    Type: String
    Description: The custom domain name (e.g., something.domain.com)
    AllowedPattern: ^[a-z0-9.-]+$
    ConstraintDescription: Must be a valid domain name

  HostedZoneId:
    Type: String
    Description: Route53 Hosted Zone ID for the domain

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${BucketName}-${AWS::Region}-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # ACM Certificate in us-east-1 (required for CloudFront)
  ACMCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: DNS
      CertificateTransparencyLoggingPreference: ENABLED
      KeyAlgorithm: RSA_2048
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      Tags:
        - Key: Name
          Value: !Sub ${DeploymentName}-certificate

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: "origin access control(OAC) for allowing cloudfront to access S3 bucket"
        Name: !Sub ${BucketName}-s3-hosting-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3Bucket
      - ACMCertificate
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMCertificate
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Ref DeploymentName
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !Ref CloudFrontOriginAccessControl
        Enabled: "true"
        DefaultRootObject: index.html
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
              - GET
              - HEAD
          CachePolicyId: !Ref DefaultCachePolicy
          TargetOriginId: !Ref DeploymentName
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All

  DefaultCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub ${DeploymentName}-default-cache-policy
        DefaultTTL: 604800
        MaxTTL: 604800
        MinTTL: 86400
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true


  BucketPolicy:
    DependsOn: CloudFrontDistribution
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: !Sub "${S3Bucket.Arn}/*"
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution.Id}"

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: 'Z2FDTNDATAQYW2'
        EvaluateTargetHealth: false

Outputs:
  S3BucketName:
    Description: Name of the s3 bucket
    Value: !Ref S3Bucket

  CloudfrontArn:
    Description: Arn of cloudfront
    Value: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution.Id}"

  CloudfrontDomainName:
    Description: CloudFront distribution domain name
    Value: !GetAtt CloudFrontDistribution.DomainName

  WebsiteURL:
    Description: Custom domain URL for the website
    Value: !Sub "https://${DomainName}"

  CertificateArn:
    Description: ARN of the ACM certificate
    Value: !Ref ACMCertificate